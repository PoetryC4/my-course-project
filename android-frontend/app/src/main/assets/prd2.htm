<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
    <script src="./js/jquery.min.js"></script>
    <script src="./js/echarts.min.js"></script>
    <script>
            var ts_code='000040.SZ';
            var prd_dur='';
        function setTsCode(stockId){
            ts_code = stockId;
        }
        function setPrdDur(dur){
            prd_dur = dur;
        }
        $(document).ready(function () {
        setTimeout(()=>{

            var stData;
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function() {
                if (true) {
                    //stData = JSON.parse(this.responseText);
                    stData = "[[6.97, 6.93, 7.0, 6.92, \"2023-03-02\"], [6.96, 6.95, 6.97, 6.89, \"2023-03-03\"], [6.96, 6.9, 6.96, 6.88, \"2023-03-06\"], [6.9, 6.78, 6.93, 6.77, \"2023-03-07\"], [6.76, 6.8, 6.8, 6.73, \"2023-03-08\"], [6.8, 6.75, 6.82, 6.74, \"2023-03-09\"], [6.73, 6.66, 6.75, 6.63, \"2023-03-10\"], [6.63, 6.65, 6.69, 6.58, \"2023-03-13\"], [6.66, 6.53, 6.66, 6.47, \"2023-03-14\"], [6.54, 6.65, 6.66, 6.54, \"2023-03-15\"], [6.61, 6.56, 6.64, 6.55, \"2023-03-16\"], [6.62, 6.64, 6.66, 6.58, \"2023-03-17\"], [6.78, 6.67, 6.78, 6.64, \"2023-03-20\"], [6.68, 6.69, 6.7, 6.65, \"2023-03-21\"], [6.71, 6.82, 6.83, 6.68, \"2023-03-22\"], [6.87, 7.03, 7.09, 6.8, \"2023-03-23\"], [6.95, 6.96, 6.98, 6.88, \"2023-03-24\"], [6.98, 6.87, 6.98, 6.86, \"2023-03-27\"], [6.88, 6.81, 6.88, 6.76, \"2023-03-28\"], [6.77, 6.75, 6.8, 6.69, \"2023-03-29\"], [6.71, 6.74, 6.77, 6.66, \"2023-03-30\"], [6.74, 6.71, 6.79, 6.66, \"2023-03-31\"], [6.68, 6.76, 6.78, 6.64, \"2023-04-03\"], [6.77, 6.71, 6.78, 6.68, \"2023-04-04\"], [6.72, 6.65, 6.72, 6.65, \"2023-04-06\"], [6.65, 6.66, 6.7, 6.64, \"2023-04-07\"], [6.67, 6.65, 6.71, 6.62, \"2023-04-10\"], [6.64, 6.64, 6.65, 6.58, \"2023-04-11\"], [6.65, 6.66, 6.69, 6.62, \"2023-04-12\"], [6.66, 6.61, 6.67, 6.59, \"2023-04-13\"], [6.6, 6.6, 6.64, 6.6, \"2023-04-14\"], [6.62, 6.73, 6.74, 6.6, \"2023-04-17\"], [6.72, 6.75, 6.8, 6.68, \"2023-04-18\"], [6.95, 6.8, 7.03, 6.8, \"2023-04-19\"], [6.74, 6.74, 6.78, 6.68, \"2023-04-20\"], [6.75, 6.71, 6.9, 6.71, \"2023-04-21\"], [6.68, 6.61, 6.69, 6.58, \"2023-04-24\"], [6.6, 6.49, 6.66, 6.47, \"2023-04-25\"], [6.55, 6.56, 6.66, 6.48, \"2023-04-26\"], [6.57, 6.51, 6.57, 6.48, \"2023-04-27\"], [6.52, 6.57, 6.57, 6.5, \"2023-04-28\"], [6.54, 6.53, 6.58, 6.51, \"2023-05-04\"], [6.53, 6.52, 6.54, 6.47, \"2023-05-05\"], [6.51, 6.54, 6.55, 6.49, \"2023-05-08\"], [6.53, 6.54, 6.58, 6.49, \"2023-05-09\"], [6.54, 6.61, 6.62, 6.51, \"2023-05-10\"], [6.62, 6.58, 6.62, 6.56, \"2023-05-11\"], [6.58, 6.52, 6.58, 6.5, \"2023-05-12\"], [6.51, 6.55, 6.56, 6.49, \"2023-05-15\"], [6.55, 6.47, 6.55, 6.46, \"2023-05-16\"], [6.46, 6.48, 6.49, 6.45, \"2023-05-17\"], [6.49, 6.41, 6.49, 6.39, \"2023-05-18\"], [6.41, 6.33, 6.41, 6.3, \"2023-05-19\"], [6.32, 6.33, 6.33, 6.29, \"2023-05-22\"], [6.31, 6.36, 6.41, 6.31, \"2023-05-23\"], [6.35, 6.34, 6.38, 6.31, \"2023-05-24\"], [6.34, 6.29, 6.34, 6.26, \"2023-05-25\"], [6.28, 6.19, 6.29, 6.12, \"2023-05-26\"], [6.15, 6.17, 6.2, 6.14, \"2023-05-29\"], [6.15, 6.16, 6.2, 6.08, \"2023-05-30\"], [6.13, 6.1, 6.15, 6.09, \"2023-05-31\"], [6.11, 6.12, 6.14, 6.07, \"2023-06-01\"], [6.13, 6.28, 6.3, 6.12, \"2023-06-02\"], [6.28, 6.21, 6.28, 6.18, \"2023-06-05\"], [6.18, 6.12, 6.2, 6.11, \"2023-06-06\"], [6.1, 6.05, 6.16, 6.02, \"2023-06-07\"], [6.04, 5.93, 6.05, 5.88, \"2023-06-08\"], [5.91, 6.02, 6.02, 5.84, \"2023-06-09\"], [6.0, 6.07, 6.08, 5.92, \"2023-06-12\"], [6.06, 6.05, 6.1, 6.03, \"2023-06-13\"], [6.06, 6.04, 6.09, 6.03, \"2023-06-14\"], [6.05, 6.14, 6.15, 6.03, \"2023-06-15\"], [6.15, 6.12, 6.17, 6.1, \"2023-06-16\"], [6.12, 6.03, 6.12, 5.99, \"2023-06-19\"], [6.03, 5.96, 6.03, 5.95, \"2023-06-20\"], [5.95, 5.91, 5.98, 5.91, \"2023-06-21\"], [5.91, 5.82, 5.91, 5.82, \"2023-06-26\"], [5.84, 5.88, 5.91, 5.83, \"2023-06-27\"], [5.89, 5.88, 5.9, 5.81, \"2023-06-28\"], [5.88, 5.9, 5.93, 5.86, \"2023-06-29\"], [5.89, 5.96, 5.99, 5.88, \"2023-06-30\"], [5.95, 6.07, 6.08, 5.95, \"2023-07-03\"], [6.06, 6.03, 6.08, 5.99, \"2023-07-04\"], [6.02, 6.01, 6.04, 5.99, \"2023-07-05\"], [6.01, 5.96, 6.01, 5.95, \"2023-07-06\"], [5.97, 5.96, 6.0, 5.93, \"2023-07-07\"], [5.99, 6.02, 6.03, 5.98, \"2023-07-10\"], [6.02, 6.04, 6.05, 6.01, \"2023-07-11\"], [6.05, 6.02, 6.06, 6.0, \"2023-07-12\"], [6.01, 6.04, 6.06, 6.01, \"2023-07-13\"], [5.93, 5.88, 5.93, 5.88, \"2023-07-14\"], [5.89, 5.84, 5.9, 5.81, \"2023-07-17\"], [5.83, 5.9, 5.91, 5.82, \"2023-07-18\"], [5.9, 5.92, 5.93, 5.89, \"2023-07-19\"], [5.94, 5.92, 5.98, 5.9, \"2023-07-20\"], [5.91, 5.93, 5.96, 5.88, \"2023-07-21\"], [5.93, 5.88, 5.95, 5.86, \"2023-07-24\"], [5.92, 6.0, 6.01, 5.88, \"2023-07-25\"], [6.01, 6.04, 6.05, 6.0, \"2023-07-26\"], [6.04, 6.01, 6.05, 5.99, \"2023-07-27\"], [6.01, 6.09, 6.1, 5.99, \"2023-07-28\"], [6.13, 6.14, 6.18, 6.12, \"2023-07-31\"], [6.16, 6.18, 6.19, 6.13, \"2023-08-01\"], [6.18, 6.18, 6.18, 6.14, \"2023-08-02\"], [6.17, 6.17, 6.19, 6.14, \"2023-08-03\"], [6.19, 6.18, 6.22, 6.16, \"2023-08-04\"], [6.17, 6.1, 6.17, 6.08, \"2023-08-07\"], [6.09, 6.1, 6.14, 6.08, \"2023-08-08\"], [6.09, 6.09, 6.12, 6.07, \"2023-08-09\"], [6.1, 6.08, 6.12, 6.06, \"2023-08-10\"], [6.08, 5.99, 6.09, 5.99, \"2023-08-11\"], [5.95, 5.95, 5.98, 5.89, \"2023-08-14\"], [5.99, 5.92, 6.0, 5.88, \"2023-08-15\"], [5.92, 5.92, 6.02, 5.88, \"2023-08-16\"], [5.91, 5.92, 5.94, 5.86, \"2023-08-17\"], [5.9, 5.86, 5.95, 5.86, \"2023-08-18\"], [5.86, 5.83, 5.91, 5.83, \"2023-08-21\"], [5.84, 5.81, 5.87, 5.76, \"2023-08-22\"], [5.8, 5.74, 5.81, 5.74, \"2023-08-23\"], [5.74, 5.73, 5.77, 5.7, \"2023-08-24\"], [5.71, 5.66, 5.76, 5.65, \"2023-08-25\"], [5.85, 5.76, 5.98, 5.73, \"2023-08-28\"], [5.76, 5.83, 5.84, 5.71, \"2023-08-29\"], [5.84, 6.05, 6.17, 5.82, \"2023-08-30\"], [6.0, 5.89, 6.0, 5.86, \"2023-08-31\"], [5.89, 5.85, 5.92, 5.82, \"2023-09-01\"], [5.84, 5.91, 5.91, 5.83, \"2023-09-04\"], [5.88, 5.86, 5.89, 5.84, \"2023-09-05\"], [5.84, 5.83, 5.85, 5.81, \"2023-09-06\"], [5.84, 5.75, 5.84, 5.74, \"2023-09-07\"], [5.74, 5.7, 5.75, 5.68, \"2023-09-08\"], [5.72, 5.74, 5.77, 5.68, \"2023-09-11\"], [5.73, 5.75, 5.78, 5.72, \"2023-09-12\"], [5.75, 5.69, 5.75, 5.67, \"2023-09-13\"], [5.68, 5.69, 5.7, 5.66, \"2023-09-14\"], [5.7, 5.7, 5.74, 5.68, \"2023-09-15\"], [5.69, 5.72, 5.74, 5.67, \"2023-09-18\"], [5.72, 5.71, 5.73, 5.69, \"2023-09-19\"], [5.7, 5.68, 5.71, 5.67, \"2023-09-20\"], [5.68, 5.66, 5.7, 5.66, \"2023-09-21\"], [5.65, 5.72, 5.73, 5.64, \"2023-09-22\"], [5.72, 5.68, 5.72, 5.66, \"2023-09-25\"], [5.67, 5.6, 5.69, 5.6, \"2023-09-26\"], [5.6, 5.63, 5.66, 5.59, \"2023-09-27\"], [5.64, 5.64, 5.67, 5.62, \"2023-09-28\"], [5.64, 5.61, 5.65, 5.6, \"2023-10-09\"], [5.61, 5.46, 5.63, 5.42, \"2023-10-10\"], [5.46, 5.46, 5.5, 5.44, \"2023-10-11\"], [5.47, 5.52, 5.54, 5.46, \"2023-10-12\"], [5.52, 5.48, 5.52, 5.43, \"2023-10-13\"], [5.47, 5.45, 5.47, 5.41, \"2023-10-16\"], [5.46, 5.42, 5.46, 5.41, \"2023-10-17\"], [5.41, 5.3, 5.43, 5.28, \"2023-10-18\"], [5.27, 5.19, 5.32, 5.17, \"2023-10-19\"], [5.19, 5.24, 5.3, 5.16, \"2023-10-20\"], [5.26, 5.11, 5.26, 5.1, \"2023-10-23\"], [5.12, 5.17, 5.2, 5.1, \"2023-10-24\"], [5.21, 5.26, 5.3, 5.2, \"2023-10-25\"], [5.26, 5.27, 5.29, 5.2, \"2023-10-26\"], [5.28, 5.35, 5.37, 5.25, \"2023-10-27\"], [5.31, 5.36, 5.38, 5.31, \"2023-10-30\"], [5.39, 5.41, 5.43, 5.36, \"2023-10-31\"], [5.41, 5.43, 5.44, 5.39, \"2023-11-01\"], [5.43, 5.39, 5.44, 5.38, \"2023-11-02\"], [5.4, 5.43, 5.46, 5.38, \"2023-11-03\"], [5.42, 5.47, 5.5, 5.4, \"2023-11-06\"], [5.46, 5.47, 5.49, 5.43, \"2023-11-07\"], [5.48, 5.44, 5.49, 5.42, \"2023-11-08\"], [5.43, 5.45, 5.46, 5.42, \"2023-11-09\"], [5.46, 5.41, 5.46, 5.38, \"2023-11-10\"], [5.41, 5.44, 5.44, 5.37, \"2023-11-13\"], [5.43, 5.43, 5.47, 5.41, \"2023-11-14\"], [5.46, 5.5, 5.53, 5.46, \"2023-11-15\"], [5.52, 5.45, 5.52, 5.44, \"2023-11-16\"], [5.43, 5.46, 5.47, 5.43, \"2023-11-17\"], [5.46, 5.49, 5.5, 5.42, \"2023-11-20\"], [5.5, 5.5, 5.54, 5.48, \"2023-11-21\"], [5.49, 5.48, 5.53, 5.48, \"2023-11-22\"], [5.47, 5.53, 5.53, 5.45, \"2023-11-23\"], [5.52, 5.52, 5.54, 5.49, \"2023-11-24\"], [5.5, 5.51, 5.54, 5.45, \"2023-11-27\"], [5.52, 5.56, 5.57, 5.48, \"2023-11-28\"], [5.57, 5.51, 5.58, 5.5, \"2023-11-29\"], [5.51, 5.58, 5.61, 5.49, \"2023-11-30\"], [5.59, 5.58, 5.6, 5.53, \"2023-12-01\"], [5.59, 5.57, 5.61, 5.56, \"2023-12-04\"], [5.56, 5.53, 5.57, 5.51, \"2023-12-05\"], [5.52, 5.55, 5.57, 5.51, \"2023-12-06\"], [5.56, 5.56, 5.58, 5.48, \"2023-12-07\"], [5.55, 5.63, 5.63, 5.52, \"2023-12-08\"], [5.63, 5.59, 5.63, 5.51, \"2023-12-11\"], [5.6, 5.6, 5.61, 5.56, \"2023-12-12\"], [5.58, 5.55, 5.6, 5.55, \"2023-12-13\"], [5.54, 5.55, 5.59, 5.54, \"2023-12-14\"], [5.55, 5.55, 5.6, 5.55, \"2023-12-15\"], [5.54, 5.48, 5.55, 5.46, \"2023-12-18\"], [5.46, 5.48, 5.51, 5.45, \"2023-12-19\"], [5.49, 5.46, 5.51, 5.46, \"2023-12-20\"], [5.46, 5.52, 5.54, 5.43, \"2023-12-21\"], [5.54, 5.51, 5.57, 5.46, \"2023-12-22\"], [5.409214496612549, 5.435000896453857, 5.493362903594971, 5.349649429321289, \"2023-12-25\"], [5.405704021453857, 5.430846214294434, 5.488970756530762, 5.345336437225342, \"2023-12-26\"], [5.391202449798584, 5.416838645935059, 5.473575592041016, 5.331455707550049, \"2023-12-27\"], [5.377513885498047, 5.405733585357666, 5.462615489959717, 5.319058895111084, \"2023-12-28\"], [5.367185592651367, 5.392734050750732, 5.449143886566162, 5.307332992553711, \"2023-12-29\"], [5.385218620300293, 5.4073686599731445, 5.46428918838501, 5.323806285858154, \"2024-01-02\"], [5.39139461517334, 5.412960529327393, 5.470056533813477, 5.33062744140625, \"2024-01-03\"]]"
                    stData = JSON.parse(stData);
                    let getDailyStockR = []
                    let row = []
                    // for(let i=0;i<stData.getDailyStock.length;i++) {
                    for(let i=0;i<stData.length;i++) {
                        row = []
                        row.push(stData[i][4])
                        row.push(stData[i][0])
                        row.push(stData[i][1])
                        row.push(stData[i][3])
                        row.push(stData[i][2])
                        //console.log(row)
                        getDailyStockR.push(row)
                    }
                    stData = getDailyStockR
            var chartDom = document.getElementById('main');
            var myChart = echarts.init(chartDom);
            var option;

            const upColor = '#ec0000';
            const upBorderColor = '#8A0000';
            const downColor = '#00da3c';
            const downBorderColor = '#008F28';
            // Each item: open，close，lowest，highest
            const data0 = splitData(stData);
            function splitData(rawData) {
                const categoryData = [];
                const values = [];
                for (var i = 0; i < rawData.length; i++) {
                    categoryData.push(rawData[i].splice(0, 1)[0]);
                    values.push(rawData[i]);
                }
                return {
                    categoryData: categoryData,
                    values: values
                };
            }
            function compareDate(input) {
                const timeElapsed = Date.now();
                const today = new Date(timeElapsed);
                var dateIn = new Date(input);
                return dateIn.getTime()>today.getTime();
            }
            function calculateMA(dayCount) {
                var result = [];
                for (var i = 0, len = data0.values.length; i < len; i++) {
                    if (i < dayCount) {
                        result.push('-');
                        continue;
                    }
                    var sum = 0;
                    for (var j = 0; j < dayCount; j++) {
                        sum += +data0.values[i - j][1];
                    }
                    result.push(sum / dayCount);
                }
                return result;
            }
            option = {
                title: {
                    text: '上证指数',
                    left: 0
                },
                tooltip: {
                    trigger: 'axis',
                    axisPointer: {
                        type: 'cross'
                    }
                },
                legend: {
                    data: ['日K', 'MA5', 'MA10', 'MA20', 'MA30']
                },
                grid: {
                    left: '10%',
                    right: '10%',
                    bottom: '15%'
                },
                xAxis: {
                    type: 'category',
                    data: data0.categoryData,
                    boundaryGap: false,
                    axisLine: { onZero: false },
                    splitLine: { show: false },
                    min: 'dataMin',
                    max: 'dataMax',
                    textStyle: {
                      color: function(value, index) {
                        return compareDate(value)?"red":"#afafaf";
                      }
                    },
                    axisLine:{
					    lineStyle:{
					    	color:  function(value, index) {
                                return compareDate(value)?"red":"#afafaf";
                            }
					    }
				    }
                },
                yAxis: {
                    scale: true,
                    splitArea: {
                        show: true
                    }
                },
                dataZoom: [
                    {
                        type: 'inside',
                        start: 50,
                        end: 100
                    },
                    {
                        show: true,
                        type: 'slider',
                        top: '90%',
                        start: 50,
                        end: 100
                    }
                ],
                series: [
                    {
                        name: '日K',
                        type: 'candlestick',
                        data: data0.values,
                        itemStyle: {
                            color: upColor,
                            color0: downColor,
                            borderColor: upBorderColor,
                            borderColor0: downBorderColor
                        },
                        markPoint: {
                            label: {
                                formatter: function (param) {
                                    return param != null ? Math.round(param.value) + '' : '';
                                }
                            },
                            data: [
                                {
                                    name: 'Mark',
                                    coord: ['2013/5/31', 2300],
                                    value: 2300,
                                    itemStyle: {
                                        color: 'rgb(41,60,85)'
                                    }
                                },
                                {
                                    name: 'highest value',
                                    type: 'max',
                                    valueDim: 'highest'
                                },
                                {
                                    name: 'lowest value',
                                    type: 'min',
                                    valueDim: 'lowest'
                                },
                                {
                                    name: 'average value on close',
                                    type: 'average',
                                    valueDim: 'close'
                                }
                            ],
                            tooltip: {
                                formatter: function (param) {
                                    return param.name + '<br>' + (param.data.coord || '');
                                }
                            }
                        },
                        markLine: {
                            symbol: ['none', 'none'],
                            data: [
                                [
                                    {
                                        name: 'from lowest to highest',
                                        type: 'min',
                                        valueDim: 'lowest',
                                        symbol: 'circle',
                                        symbolSize: 10,
                                        label: {
                                            show: false
                                        },
                                        emphasis: {
                                            label: {
                                                show: false
                                            }
                                        }
                                    },
                                    {
                                        type: 'max',
                                        valueDim: 'highest',
                                        symbol: 'circle',
                                        symbolSize: 10,
                                        label: {
                                            show: false
                                        },
                                        emphasis: {
                                            label: {
                                                show: false
                                            }
                                        }
                                    }
                                ],
                                {
                                    name: 'min line on close',
                                    type: 'min',
                                    valueDim: 'close'
                                },
                                {
                                    name: 'max line on close',
                                    type: 'max',
                                    valueDim: 'close'
                                }
                            ]
                        }
                    },
                    {
                        name: 'MA5',
                        type: 'line',
                        data: calculateMA(5),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    },
                    {
                        name: 'MA10',
                        type: 'line',
                        data: calculateMA(10),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    },
                    {
                        name: 'MA20',
                        type: 'line',
                        data: calculateMA(20),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    },
                    {
                        name: 'MA30',
                        type: 'line',
                        data: calculateMA(30),
                        smooth: true,
                        lineStyle: {
                            opacity: 0.5
                        }
                    }
                ]
            };

            option && myChart.setOption(option);
                }
            };
            // xmlhttp.open("GET", "http://113.54.228.171:6567/stock/singleData?tsCode="+ts_code, true);
            xmlhttp.open("GET", "http://10.0.2.2:6060/tsCode="+ts_code, true);
            xmlhttp.send();
        },500);
        });

    </script>
</head>
<body>
    <div id="main" style="width: 100%;height:980px;"></div>

</body>
</html>